import 'package:cloud_firestore/cloud_firestore.dart';class prodcuct {  String name ;  String price ;  String pic  ;  String id ;map () {  return {    "name" : name ,    "price" :price ,    "pic" : pic ,    "id" : id,  };}}class Cat1 extends prodcuct{  String name ;  String price ;  String pic  ;  String id ;  Cat1({this.name,this.price,this.pic,this.id});  factory Cat1.fromFirestore(DocumentSnapshot doc) {    Map data = doc.data();    return Cat1(      name: data["name"],      pic: data["pic"],      id: data["id"],      price: data["price"]    );  }}class Cat2 extends prodcuct{  String name ;  String price ;  String pic  ;  String id ;  Cat2({this.name,this.price,this.pic,this.id});  factory Cat2.fromFirestore(DocumentSnapshot doc) {    Map data = doc.data();    return Cat2(        name: data["name"],        pic: data["pic"],        id: data["id"],        price: data["price"]    );  }}class Cat3 extends prodcuct{  String name ;  String price ;  String pic  ;  String id ;  Cat3({this.name,this.price,this.pic,this.id});  factory Cat3.fromFirestore(DocumentSnapshot doc) {    Map data = doc.data();    return Cat3(        name: data["name"],        pic: data["pic"],        id: data["id"],        price: data["price"]    );  }}class Cat4 extends prodcuct {  String name ;  String price ;  String pic  ;  String id ;  Cat4({this.name,this.price,this.pic,this.id});  factory Cat4.fromFirestore(DocumentSnapshot doc) {    Map data = doc.data();    return Cat4(        name: data["name"],        pic: data["pic"],        id: data["id"],        price: data["price"]    );  }}class DatabaseService {  final _db = FirebaseFirestore.instance;  Stream<List<Cat1>> stream_cats() {    var ref = _db.collection("cat1");    return ref.snapshots().map((event) =>        event.docs.map((e) => Cat1.fromFirestore(e))            .toList());  }  Stream<List<Cat2>> stream_cats2() {    var ref = _db.collection("cat2");    return ref.snapshots().map((event) =>        event.docs.map((e) => Cat2.fromFirestore(e))            .toList());  }  Stream<List<Cat3>> stream_cats3() {    var ref = _db.collection("cat3");    return ref.snapshots().map((event) =>        event.docs.map((e) => Cat3.fromFirestore(e))            .toList());  }}