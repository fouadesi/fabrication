import 'package:cloud_firestore/cloud_firestore.dart';import 'package:fabrication2/Home/models.dart';import 'package:fabrication2/size_config.dart';import 'package:firebase_auth/firebase_auth.dart';import 'package:flutter/material.dart';import 'package:google_fonts/google_fonts.dart';import 'package:provider/provider.dart';class ShoppingCard extends StatefulWidget {  @override  _ShoppingCardState createState() => _ShoppingCardState();}class _ShoppingCardState extends State<ShoppingCard> {  @override  Widget build(BuildContext context) {    final prod = Provider.of<List<prodcuct>>(context);    return Scaffold(      bottomNavigationBar: ConfirmOrder(),      appBar: AppBar(        centerTitle: true,        title: Text("سلة المشتريات",style: GoogleFonts.tajawal(          color: Colors.black87        ),),      ),      body: ListView.builder(          itemCount: prod.length ?? 0 ,        itemBuilder: (context,index) {            return Padding(              padding: EdgeInsets.only(top: 10),              child: ItemInShoppingCard(prod[index]),            );        }      )    );  }}class ItemInShoppingCard extends StatelessWidget {  prodcuct pro ;  ItemInShoppingCard(this.pro);  @override  Widget build(BuildContext context) {    final user = Provider.of<User>(context);    return Row(      mainAxisAlignment: MainAxisAlignment.spaceAround ,      children: [      SizedBox(width: 100,      child: AspectRatio(        aspectRatio: 0.88,        child: Container(          decoration:  BoxDecoration(            color: Color.fromRGBO(253, 127, 44,1).withOpacity(0.7),            borderRadius: BorderRadius.circular(15),          ),          child: Image.network(this.pro.pic),        ),      ),),        SizedBox(width: 140,),        SizedBox(          width: 100,          child: Row(            children: [              Column(                crossAxisAlignment: CrossAxisAlignment.start,                children: [                  Text(                      "${pro.name}"                  ),                  SizedBox(                    height: 10,                  ),                  Text.rich(TextSpan(                text: "DA ${pro.price}"  ,                style: GoogleFonts.tajawal(                  fontWeight: FontWeight.w600,                  color: Color.fromRGBO(253, 127, 44,1),                ) ,                children: [                ]                  )),              ],),              SizedBox(                width: 20,              ),              InkWell(                onTap: () {                  FirebaseFirestore.instance.collection("ItemOrder").doc(user.uid).                  collection("items").doc(pro.id).delete();                },                child: Icon(Icons.delete),              ),            ],          ),        ),       SizedBox(width: 10,)    ],);  }}class ConfirmOrder extends StatefulWidget {  @override  _ConfirmOrderState createState() => _ConfirmOrderState();}class _ConfirmOrderState extends State<ConfirmOrder> { bool   use_code_promo = false ; TextEditingController name_controller = TextEditingController();  TextEditingController phone_controller = TextEditingController();  TextEditingController adress_controller = TextEditingController();  TextEditingController code_promo_controller = TextEditingController();  @override  Widget build(BuildContext context) {    double total = 0 ;    final products =  Provider.of<List<prodcuct>>(context);    for(int i = 0 ; i < products.length ; i++) {      total+= (double.parse(products[i].price));    }    User user = FirebaseAuth.instance.currentUser ;    return Container(      padding: EdgeInsets.symmetric(        vertical: getProportionateScreenWidth(15),        horizontal: getProportionateScreenWidth(30),      ),      // height: 174,      decoration: BoxDecoration(        color: Colors.white,        borderRadius: BorderRadius.only(          topLeft: Radius.circular(30),          topRight: Radius.circular(30),        ),        boxShadow: [          BoxShadow(            offset: Offset(0, -15),            blurRadius: 20,            color: Color(0xFFDADADA).withOpacity(0.15),          )        ],      ),      child: SafeArea(        child: Column(          mainAxisSize: MainAxisSize.min,          crossAxisAlignment: CrossAxisAlignment.start,          children: [            Row(              children: [                Container(                  padding: EdgeInsets.all(10),                  height: getProportionateScreenWidth(40),                  width: getProportionateScreenWidth(40),                  decoration: BoxDecoration(                    color: Color(0xFFF5F6F9),                    borderRadius: BorderRadius.circular(10),                  ),                  child: Icon(                   Icons.arrow_forward                  ),                ),                Spacer(),                const SizedBox(width: 5),                SizedBox(                  width: 200,                  child: OutlineButton(                    shape: new RoundedRectangleBorder(                      borderRadius: new BorderRadius.circular(30.0),                    ),                    child: Text("إستعمال كود برومو",style: GoogleFonts.tajawal(color: Color.fromRGBO(253, 127, 44,1)),),                    onPressed: () {                      if (products.length > 0) {                        showDialog(context: context,barrierDismissible: true, builder: (context) {                          return AlertDialog(                            title: Text("إستعمال كود برومو",                              textAlign: TextAlign.center,                              style: GoogleFonts.tajawal(color: Colors.black),),                            content: Column(                              mainAxisSize: MainAxisSize.min,                              children: [                                Container(                                  alignment: Alignment.centerLeft,                                  decoration: BoxDecoration(                                      color: Colors.white,                                      borderRadius: BorderRadius.circular(10),                                      boxShadow: [                                        BoxShadow(                                          color: Colors.black26,                                          blurRadius: 6,                                          offset: Offset(0, 3),                                        )                                      ]),                                  height: 60,                                  child: Theme(                                      data: new ThemeData(                                        primaryColor: Colors.white,                                        primaryColorDark: Colors.white,                                      ),                                      child: TextField(                                        keyboardType: TextInputType.text,                                        style: GoogleFonts.tajawal(                                          color: Colors.black87,                                        ),                                        controller: code_promo_controller,                                        decoration: InputDecoration(                                          border: InputBorder.none,                                          contentPadding: EdgeInsets.only(top: 14),                                          prefixIcon: Icon(Icons.fiber_pin,                                              color: Color.fromRGBO(253, 127, 44, 1)),                                          hintText: " Code promo",                                          hintStyle: TextStyle(color: Colors.black87),                                        ),                                      )),                                ),                              ],                            ),                            actions: [                              TextButton(onPressed: (){                                if(use_code_promo){                                  return;                                }                                if(code_promo_controller.text.isNotEmpty ) {                                  String code = code_promo_controller.text ;                                  print("code");                                  FirebaseFirestore.instance.                                  collection("codepromo").                                  doc(code).get().then((value) {                                    print(value.reference);                                    if(value.exists){                                      use_code_promo = true ;                                      num promo = value.data()["num"];                                      print(promo);                                      setState(() {                                        total = total - (total /promo);                                      });                                      print(total);                                    }else {                                      print("nexistepas");                                    }                                  });                                }else {                                  return;                                }                              }, child: Text("إستعمال كود Promo",style: GoogleFonts.tajawal(                                  color: Colors.orange),textAlign: TextAlign.center,))                            ],                          );                        });                      } else {                      }                    },                  ),                ),              ],            ),            SizedBox(height: getProportionateScreenHeight(20)),            Row(              mainAxisAlignment: MainAxisAlignment.spaceBetween,              children: [                Text.rich(                  TextSpan(                    text: "المجموع\n",                    style: GoogleFonts.tajawal(fontSize: 16, color: Colors.black),                    children: [                      TextSpan(                        text: "$total DA",                        style: GoogleFonts.tajawal(                            fontSize: 16, color: Colors.black),                      ),                    ],                  ),                ),                SizedBox(                  width: 200,                  child: FlatButton(                    shape: new RoundedRectangleBorder(                      borderRadius: new BorderRadius.circular(30.0),                    ),                    color: Color.fromRGBO(253, 127, 44,1),                    child: Text("إرسال الطلب",style: GoogleFonts.tajawal(color: Colors.white),),                    onPressed: () {                      if (products.length > 0) {                        showDialog(context: context,barrierDismissible: true, builder: (context) {                          return AlertDialog(                            title: Text("ارسال الطلب ",                              textAlign: TextAlign.center,                              style: GoogleFonts.tajawal(color: Colors.black),),                            content: Column(                              mainAxisSize: MainAxisSize.min,                              children: [                                Container(                                  alignment: Alignment.centerLeft,                                  decoration: BoxDecoration(                                      color: Colors.white,                                      borderRadius: BorderRadius.circular(10),                                      boxShadow: [                                        BoxShadow(                                          color: Colors.black26,                                          blurRadius: 6,                                          offset: Offset(0, 3),                                        )                                      ]),                                  height: 60,                                  child: Theme(                                      data: new ThemeData(                                        primaryColor: Colors.white,                                        primaryColorDark: Colors.white,                                      ),                                      child: TextField(                                        keyboardType: TextInputType.name,                                        style: GoogleFonts.tajawal(                                          color: Colors.black87,                                        ),controller: this.name_controller,                                        decoration: InputDecoration(                                          border: InputBorder.none,                                          contentPadding: EdgeInsets.only(top: 14),                                          prefixIcon: Icon(Icons.person,                                              color: Color.fromRGBO(253, 127, 44, 1)),                                          hintText: "الإسم الكامل",                                          hintStyle: TextStyle(color: Colors.black87),                                        ),                                      )),                                ),                                SizedBox(                                  height: 15,                                ),                                Container(                                  alignment: Alignment.centerLeft,                                  decoration: BoxDecoration(                                      color: Colors.white,                                      borderRadius: BorderRadius.circular(10),                                      boxShadow: [                                        BoxShadow(                                          color: Colors.black26,                                          blurRadius: 6,                                          offset: Offset(0, 3),                                        )                                      ]),                                  height: 60,                                  child: Theme(                                      data: new ThemeData(                                        primaryColor: Colors.white,                                        primaryColorDark: Colors.white,                                      ),                                      child: TextField(                                        controller: this.adress_controller,                                        keyboardType: TextInputType.name,                                        style: GoogleFonts.tajawal(                                          color: Colors.black87,                                        ),                                        decoration: InputDecoration(                                          border: InputBorder.none,                                          contentPadding: EdgeInsets.only(top: 14),                                          prefixIcon: Icon(Icons.account_balance_rounded,                                              color: Color.fromRGBO(253, 127, 44, 1)),                                          hintText: "العنوان",                                          hintStyle: TextStyle(color: Colors.black87),                                        ),                                      )),                                ),                                SizedBox(                                  height: 15,                                ),Container(                                  alignment: Alignment.centerLeft,                                  decoration: BoxDecoration(                                      color: Colors.white,                                      borderRadius: BorderRadius.circular(10),                                      boxShadow: [                                        BoxShadow(                                          color: Colors.black26,                                          blurRadius: 6,                                          offset: Offset(0, 3),                                        )                                      ]),                                  height: 60,                                  child: Theme(                                      data: new ThemeData(                                        primaryColor: Colors.white,                                        primaryColorDark: Colors.white,                                      ),                                      child: TextField(                                        keyboardType: TextInputType.phone,                                        style: GoogleFonts.tajawal(                                          color: Colors.black87,                                        ),                                        controller: this.phone_controller,                                        decoration: InputDecoration(                                          border: InputBorder.none,                                          contentPadding: EdgeInsets.only(top: 14),                                          prefixIcon: Icon(Icons.phone,                                              color: Color.fromRGBO(253, 127, 44, 1)),                                          hintText: " رقم الهاتف",                                          hintStyle: TextStyle(color: Colors.black87),                                        ),                                      )),                                ),                              ],                            ),                            actions: [                              TextButton(onPressed: (){                                String name ;                                String phone ;                                String adress ;                                if(phone_controller.text.isNotEmpty &&                                    adress_controller.text.isNotEmpty &&                                    name_controller.text.isNotEmpty) {                                  String name = name_controller.text ;                                  String phone = phone_controller.text;                                  String adresse = adress_controller.text ;                                }else {                                  return;                                }                                String id = DateTime.now().toString();                                var map1 = Map.fromIterable(products,                                    key: (e) => e.id, value: (e) => [e.name,                                       e.price,e.pic,                                   ]);                                print("h");                                print(map1);    FirebaseFirestore.instance.collection('PendingOrder').    doc(user.uid).collection("items").doc(id).set({      'id': id,      'products': map1,      'userid': user.uid,      'usecodepromo': use_code_promo,      "code_de_promo":code_promo_controller.text,      "activatedadresse" : adress_controller.text,      'name' : name_controller.text,      'encours' : false,      'livred' : false,      'phone' : phone_controller.text,                                }).then((value) {      for (int i = 0 ; i < products.length; i++)        FirebaseFirestore.instance.collection("ItemOrder").doc(user.uid).        collection("items").doc(products[i].id).delete();     }).then((value) {      Navigator.pop(context);      showDialog(          barrierDismissible: true,          context: context,          builder: (context) => AlertDialog(              title: Text(                "تم تلقي طلبكم بنجاح سوف يتم مراسلتكم في أقرب وقت",                style: GoogleFonts.tajawal(color: Colors.black,),textAlign: TextAlign.center,              )));    });                               }, child: Text("إرسال الطلب",style: GoogleFonts.tajawal(                                  color: Colors.orange),textAlign: TextAlign.center,))                            ],                          );                        });                      } else {                      }                    },                  ),                ),              ],            ),          ],        ),      ),    );  }}